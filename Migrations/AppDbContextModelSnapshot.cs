// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuinnlyticsConsole;

#nullable disable

namespace QuinnlyticsConsole.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("QuinnlyticsConsole.Models.GameVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameVersions");
                });

            modelBuilder.Entity("QuinnlyticsConsole.Models.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("QuinnlyticsConsole.Models.ItemException", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemExceptions");
                });

            modelBuilder.Entity("QuinnlyticsConsole.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AllInPings")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssistMePings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assists")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Champion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CommandPings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Deaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ESkillUsage")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EnemyMissingPings")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EnemyVisionPings")
                        .HasColumnType("INTEGER");

                    b.Property<long>("GameDuration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("GetBackPings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoldEarned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoldSpent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kills")
                        .HasColumnType("INTEGER");

                    b.Property<long>("MatchDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MatchId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("MinionsPerMinutes")
                        .HasColumnType("REAL");

                    b.Property<int?>("NeedVisionPings")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OnMyWayPings")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opponent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PushPings")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QSkillUsage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RSkillUsage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RuneDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SummonerSpells")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WSkillUsage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Win")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
